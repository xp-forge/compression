name: Tests

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  tests:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    name: PHP ${{ matrix.php-versions }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.php-versions >= '8.4' }}
    strategy:
      fail-fast: false
      matrix:
        php-versions: ['8.4']
        os: [ubuntu-latest]

    steps:
    - name: Configure git
      if: runner.os == 'Windows'
      run: git config --system core.autocrlf false; git config --system core.eol lf

    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up PHP ${{ matrix.php-versions }}
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
        ini-values: date.timezone=Europe/Berlin

    - name: Add Brotli extension for ${{ runner.os }}
      if: runner.os != 'Windows' && matrix.php-versions == '8.4'
      run: >
        git clone --recursive --depth=1 https://github.com/kjdev/php-ext-brotli.git &&
        cd php-ext-brotli &&
        phpize &&
        ./configure --enable-brotli &&
        make &&
        sudo make install &&
        sudo echo "extension=brotli.so" > /etc/php/8.4/mods-available/brotli.ini &&
        sudo phpenmod brotli

    - name: Validate composer.json and composer.lock
      run: composer validate

    - name: Get Composer Cache Directory
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: Install dependencies
      run: >
        curl -sSL https://baltocdn.com/xp-framework/xp-runners/distribution/downloads/e/entrypoint/xp-run-8.6.2.sh > xp-run &&
        composer install --prefer-dist &&
        echo "vendor/autoload.php" > composer.pth

    - name: Run test suite
      run: sh xp-run xp.test.Runner src/test/php
