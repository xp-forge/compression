name: Tests

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  tests:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    name: PHP ${{ matrix.php-versions }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.php-versions >= '8.5' }}
    strategy:
      fail-fast: false
      matrix:
        php-versions: ['7.0', '7.1', '7.2', '7.3', '7.4', '8.0', '8.1', '8.2', '8.3', '8.4', '8.5']
        os: [ubuntu-latest, windows-latest]

    steps:
    - name: Configure git
      if: runner.os == 'Windows'
      run: git config --system core.autocrlf false; git config --system core.eol lf

    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up PHP ${{ matrix.php-versions }}
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
        ini-values: date.timezone=Europe/Berlin
        extensions: zlib, bz2

    - name: Add Brotli extension (Ubuntu)
      if: runner.os != 'Windows' && matrix.php-versions == '8.4'
      run: >
        git clone --recursive --depth=1 https://github.com/kjdev/php-ext-brotli.git &&
        cd php-ext-brotli &&
        phpize &&
        ./configure --enable-brotli &&
        make -j $(nproc) &&
        echo "extension=brotli.so" > brotli.ini &&
        sudo make install &&
        sudo cp brotli.ini /etc/php/${{ matrix.php-versions }}/mods-available/ &&
        sudo phpenmod -v ${{ matrix.php-versions }} brotli

    - name: Add ZStandard extension (Ubuntu)
      if: runner.os != 'Windows' && matrix.php-versions == '8.4'
      run: >
        git clone --recursive --depth=1 https://github.com/kjdev/php-ext-zstd.git &&
        cd php-ext-zstd &&
        phpize &&
        ./configure --enable-zstd &&
        make -j $(nproc) &&
        echo "extension=zstd.so" > zstd.ini &&
        sudo make install &&
        sudo cp zstd.ini /etc/php/${{ matrix.php-versions }}/mods-available/ &&
        sudo phpenmod -v ${{ matrix.php-versions }} zstd

    - name: Add Brotli extension (Windows)
      if: runner.os == 'Windows' && matrix.php-versions == '8.4'
      run: >
        curl -sSL -o brotli.zip https://github.com/kjdev/php-ext-brotli/releases/download/0.18.0/php_brotli-0.18.0-8.4-nts-vs17-x86_64.zip &&
        unzip brotli.zip &&
        cp php_brotli*.dll C:/tools/php/ext/php_brotli.dll &&
        echo "extension=brotli" >> C:/tools/php/php.ini

    - name: Add ZStandard extension (Windows)
      if: runner.os == 'Windows' && matrix.php-versions == '8.4'
      run: >
        curl -sSL -o zstd.zip https://github.com/thekid/php-ext-zstd/releases/download/0.15.0/php_zstd-0.15.0-8.4-nts-vs17-x86_64.zip &&
        unzip zstd.zip &&
        cp php_zstd*.dll C:/tools/php/ext/php_zstd.dll &&
        echo "extension=zstd" >> C:/tools/php/php.ini

    - name: Validate composer.json and composer.lock
      run: composer validate

    - name: Get Composer Cache Directory
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: Install dependencies
      run: >
        curl -sSL https://baltocdn.com/xp-framework/xp-runners/distribution/downloads/e/entrypoint/xp-run-9.1.0.sh > xp-run &&
        composer install --prefer-dist &&
        echo "vendor/autoload.php" > composer.pth

    - name: Run test suite
      run: sh xp-run xp.test.Runner src/test/php
